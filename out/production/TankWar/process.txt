记录需要开发的内容步骤
1:游戏窗口初始化，设置标题，大小，坐标，窗口事件的监听

2:制作游戏菜单，游戏菜单的显示，以及游戏菜单的按键控制
    游戏被分成若干哥游戏的状态：gameState
    1)游戏菜单
    2）游戏帮助
    3）游戏关于
    4）游戏中
    5）游戏结束
在不同状态下，绘制不同的内容，按键有不同的处理方式

3:调整整个游戏窗口的重绘机制。
fps（刷新率）：frame per second 帧/每秒
每秒固定刷新整个窗口。
fps==33帧，每隔30ms刷新一次（对整个窗口进行重绘， repaint（） ）
单独启动一个线程用于窗口的重绘

4:坦克类的定义和绘制

5：坦克的方向行走和边界的控制     （遇到问题，坦克圆形边界超出界外，以半径为限，无法控制，无法解决）
且图形表现力差，最后决定改用图片替代坦克

6：坦克发射子弹

7:坦克绘制使用图片（资源图片在文件res内）

8：由于屏幕闪烁，用双缓冲的方法解决(在GameFrame文件编写)
    双缓冲方法第一步，定义一张和屏幕大小一致的图片
    第二步，得到图片画笔
    第三步，使用图片画笔，将所有内容绘制到图片上

9:子弹的效率问题
解决方案：使用对象池来解决；提前创建好若干哥子弹对象，放到一个容器中，需要的时候从对象池取出一个使用
当子弹需要被销毁的时候，放回到原来的对象池中。

10：敌人坦克的控制
1）随机的在左右上角产生敌人的坦克
2) 让敌人能够有一定程度的ai（能够自动移动和攻击）
    坦克相关的类：父类：Tank 子类： MyTank   EnemyTank

11：每隔5秒让敌人坦克获得一个状态（站立，行走），每一帧0.05的概率判断敌人是否发射子弹

12.使用对象池来管理爆炸对象

13.坦克加血条和    todo名字（18)

14.敌人坦克对象池

15.自己坦克死亡处理,游戏结束，返回菜单

16.实现地图绘制

17.优化地图随机初始化，子弹和地图碰撞

18.玩家老巢  被击毁游戏结束

19.添加其他种类地图元素,增加多种敌人（34）

20.添加关卡

21.添加背景音乐和音效